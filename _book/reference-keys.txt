using-rust-to-implement-the-simulatied-annealing-algorithm
the-problem
the-data
simulated-annealing
the-algorithm
introduction
variables
target-audience
examples
integers
create-a-new-rust-program
implementation
there-is-a-lot-of-new-stuff-in-this-function
add-a-test-for-this
implement-the-simaulated-annealing-algorithm
scaling-of-the-data
calculating-cluster-energy
the-main-function
and-funtions-to-plot-and-write-the-data
main.rs
sharing-your-book
publishing
pages
metadata-for-sharing
error-handling
unrecoverable-errors-panic
example
when-to-use-panic
handling-panics-gracefully
recoverable-errors-resultt-e
example-1
resultt-e-explanation
common-ways-to-handle-resultt-e
propagate-the-error-operator
handle-the-error-manually
use-unwrap-or-expect-risky
using-unwrap_or-and-unwrap_or_else
custom-errors-with-thiserror-and-anyhow
using-thiserror-for-custom-errors
using-anyhow-for-simpler-error-handling
summary-of-rust-error-handling-techniques
testing
writing-basic-unit-tests
example-2
common-assertions
running-tests
testing-for-panics
using-resultt-e-in-tests
ignoring-tests
benchmarking-with-bench
integration-tests
example-testsintegration_test.rs
testing-the-executable
example-teststest_binary.rs
summary
implement-the-simulated-annealing-algorithm
we-have-an-executable
the-program-logiocs-is-implemented-in-main.rs
implement-a-print-for-our-class
take-home-message
rust-vs.-r-key-differences
a-quick-refresher-object-oriented-programming-oo
r-example-object-oriented-approach-using-s3
rust-equivalent-using-structs-and-traits
key-takeaways
the-problem-clustering-expression-data-using-simulated-annealing
biological-context
variables---strict-types-and-ownership-in-rust
strict-types-in-rust
example-1-strict-typing-in-rust
what-happens-here
key-points
ownership-in-rust
ownership-rules-in-rust
example-2-ownership-in-rust
explanation
example-3-borrowing-in-rust
explanation-1
combining-types-and-ownership
output
summary-of-ownership-and-strict-types
